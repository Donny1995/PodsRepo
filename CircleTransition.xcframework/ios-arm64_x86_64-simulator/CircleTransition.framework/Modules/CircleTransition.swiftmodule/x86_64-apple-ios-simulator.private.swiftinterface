// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1)
// swift-module-flags: -target x86_64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name CircleTransition
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_hasMissingDesignatedInitializers final public class CircleTransitioner {
  public static func animate(fromView view: UIKit.UIView, toView: UIKit.UIView?, duration: Foundation.TimeInterval, fromPath: CoreGraphics.CGPath, toPath: CoreGraphics.CGPath, changeBlock: (_ view: UIKit.UIView) -> Swift.Void, configurePlacholder: ((UIKit.UIView) -> Swift.Void)?, isBlockBefore: Swift.Bool, finalize: ((_ view: UIKit.UIView) -> Swift.Void)?, completion: (() -> Swift.Void)? = nil)
  public static func animateCircleIn(onView view: UIKit.UIView, toView: UIKit.UIView?, duration: Foundation.TimeInterval, center: CoreFoundation.CGPoint?, circleRadius: CoreFoundation.CGFloat = 0, configurePlacholder: ((UIKit.UIView) -> Swift.Void)?, changeBlock: (_ view: UIKit.UIView) -> Swift.Void, completion: (() -> Swift.Void)? = nil)
  public static func animateCircleOut(onView view: UIKit.UIView, toView: UIKit.UIView, duration: Foundation.TimeInterval, center: CoreFoundation.CGPoint? = nil, circleRadius: CoreFoundation.CGFloat = 0, configurePlacholder: ((UIKit.UIView) -> Swift.Void)?, changeBlock: @escaping (_ view: UIKit.UIView) -> Swift.Void, completion: (() -> Swift.Void)? = nil)
  @objc deinit
}
